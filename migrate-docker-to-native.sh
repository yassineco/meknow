#!/bin/bash

# üîÑ Script de migration de Docker √† d√©ploiement natif
# Usage: sudo bash migrate-docker-to-native.sh

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

PROJECT_PATH="/var/www/meknow"

echo -e "${BLUE}================================${NC}"
echo -e "${BLUE}üîÑ Migration Docker ‚Üí Natif${NC}"
echo -e "${BLUE}================================${NC}\n"

# V√©rifier si on est en root
if [ "$EUID" -ne 0 ]; then 
    echo -e "${RED}‚ùå Ce script doit √™tre ex√©cut√© avec sudo${NC}"
    exit 1
fi

# 1. Nettoyage de Docker
echo -e "${YELLOW}[1/5] Nettoyage de la version Docker...${NC}"
bash $PROJECT_PATH/cleanup-docker-old.sh
echo -e "${GREEN}‚úÖ Nettoyage Docker compl√©t√©${NC}"

# 2. Mettre √† jour le projet Git
echo -e "\n${YELLOW}[2/5] Mise √† jour du projet...${NC}"
cd $PROJECT_PATH
git fetch origin
git pull origin main
echo -e "${GREEN}‚úÖ Projet mis √† jour${NC}"

# 3. Installer les d√©pendances natives
echo -e "\n${YELLOW}[3/5] Installation des d√©pendances...${NC}"
npm install --production

cd menow-web
npm install --production
npm run build
cd ..

echo -e "${GREEN}‚úÖ D√©pendances install√©es et frontend compil√©${NC}"

# 4. Configuration systemd
echo -e "\n${YELLOW}[4/5] Configuration des services systemd...${NC}"

# Copier les fichiers de service
cp $PROJECT_PATH/meknow-api.service /etc/systemd/system/
cp $PROJECT_PATH/meknow-web.service /etc/systemd/system/

# Cr√©er l'utilisateur www-data s'il n'existe pas
if ! id "www-data" &>/dev/null; then
    useradd -r -s /bin/bash www-data
fi

# Cr√©er les r√©pertoires de logs
mkdir -p /var/log/meknow
chown www-data:www-data /var/log/meknow

# Changer le propri√©taire du projet
chown -R www-data:www-data $PROJECT_PATH

# Charger les nouveaux services
systemctl daemon-reload
systemctl enable meknow-api.service meknow-web.service

echo -e "${GREEN}‚úÖ Services systemd configur√©s${NC}"

# 5. D√©marrer les services
echo -e "\n${YELLOW}[5/5] D√©marrage des services...${NC}"
systemctl start meknow-api meknow-web

# V√©rifier le statut
sleep 3

if systemctl is-active --quiet meknow-api; then
    echo -e "${GREEN}‚úÖ Backend d√©marr√© avec succ√®s${NC}"
else
    echo -e "${RED}‚ùå Erreur au d√©marrage du backend${NC}"
    journalctl -u meknow-api -n 20
    exit 1
fi

if systemctl is-active --quiet meknow-web; then
    echo -e "${GREEN}‚úÖ Frontend d√©marr√© avec succ√®s${NC}"
else
    echo -e "${RED}‚ùå Erreur au d√©marrage du frontend${NC}"
    journalctl -u meknow-web -n 20
    exit 1
fi

# R√©sum√© final
echo -e "\n${GREEN}================================${NC}"
echo -e "${GREEN}‚úÖ Migration termin√©e avec succ√®s!${NC}"
echo -e "${GREEN}================================${NC}"
echo ""
echo -e "${BLUE}üìä Statut des services:${NC}"
systemctl status meknow-api --no-pager | grep -E "Active|since"
systemctl status meknow-web --no-pager | grep -E "Active|since"
echo ""
echo -e "${BLUE}üîó Acc√®s:${NC}"
echo "Frontend: http://localhost:3000"
echo "API: http://localhost:9000/api/products"
echo "Admin: http://localhost:9000/admin"
echo ""
echo -e "${BLUE}üìã Commandes utiles:${NC}"
echo "Voir les logs: sudo journalctl -u meknow-api -f"
echo "            sudo journalctl -u meknow-web -f"
echo "Red√©marrer: sudo systemctl restart meknow-api meknow-web"
echo "Arr√™ter: sudo systemctl stop meknow-api meknow-web"
echo ""
echo -e "${YELLOW}‚ÑπÔ∏è  Les conteneurs Docker ont √©t√© compl√®tement supprim√©s${NC}"
echo -e "${YELLOW}‚ÑπÔ∏è  Le projet tourne maintenant en natif sur le VPS${NC}"
