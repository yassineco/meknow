# Dockerfile pour le frontend Next.js avec gestion rubriques
FROM node:18-alpine

# Informations du mainteneur
LABEL maintainer="yassineco"
LABEL description="Meknow Frontend Next.js avec gestion rubriques Catalogue/Lookbook"
LABEL version="2.0.0"

# Installer les dépendances système
RUN apk add --no-cache libc6-compat curl

# Définir le répertoire de travail
WORKDIR /app

# Variables d'environnement
ENV NODE_ENV=production
ENV PORT=3000
ENV NEXT_TELEMETRY_DISABLED=1

# Copier les fichiers de dépendances
COPY package*.json ./

# Installer les dépendances
RUN npm ci --only=production

# Copier le code source
COPY . .

# Variables d'environnement pour le build
ARG NEXT_PUBLIC_API_URL=http://localhost:9000
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV API_URL=http://backend:9000

# Build de l'application Next.js
RUN npm run build

# Créer un utilisateur non-root
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Changer les permissions
RUN chown -R nextjs:nodejs /app

# Passer à l'utilisateur nextjs
USER nextjs

# Exposer le port

# Créer un utilisateur non-root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copier les fichiers nécessaires depuis builder
COPY --from=builder /app/public ./public

# Définir les permissions correctes pour les assets pré-rendus
RUN mkdir .next
RUN chown nextjs:nodejs .next

# Copier automatiquement les fichiers de sortie standalone
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 5000

ENV HOSTNAME="0.0.0.0"

# Commande de démarrage
CMD ["node", "server.js"]