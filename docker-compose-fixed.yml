version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: meknow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: meknow_production
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: meknow2024!
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - meknow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d meknow_production"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Express.js
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: meknow-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 9000
      DATABASE_URL: postgresql://postgres:meknow2024!@database:5432/meknow_production
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: meknow2024!
      DB_NAME: meknow_production
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      COOKIE_SECRET: ${COOKIE_SECRET:-your-super-secret-cookie-key-change-this}
      ENABLE_RUBRIQUES: "true"
      ENABLE_LOOKBOOK: "true"
      ENABLE_ADMIN_INTERFACE: "true"
    ports:
      - "9001:9000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      database:
        condition: service_healthy
    networks:
      - meknow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Next.js avec gestion rubriques
  frontend:
    build:
      context: ./menow-web
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:9000
    container_name: meknow-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://backend:9000
      API_URL: http://backend:9000
      ENABLE_RUBRIQUES: "true"
      ENABLE_LOOKBOOK: "true"
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - meknow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Interface Admin (serveur de fichiers statiques)
  admin:
    image: nginx:alpine
    container_name: meknow-admin
    restart: unless-stopped
    volumes:
      - ./admin-complete-ecommerce.html:/usr/share/nginx/html/admin-complete-ecommerce.html:ro
      - ./admin-complete-ecommerce.html:/usr/share/nginx/html/index.html:ro
      - ./assets:/usr/share/nginx/html/assets:ro
      - ./nginx-admin.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8082:80"
    networks:
      - meknow-network

volumes:
  postgres_data:
    driver: local

networks:
  meknow-network:
    driver: bridge