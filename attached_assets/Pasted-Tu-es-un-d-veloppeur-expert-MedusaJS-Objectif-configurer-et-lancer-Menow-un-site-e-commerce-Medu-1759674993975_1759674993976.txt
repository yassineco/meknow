Tu es un d√©veloppeur expert MedusaJS.
Objectif : configurer et lancer Menow, un site e-commerce MedusaJS + Next.js, d√©j√† structur√© avec design premium noir (Hero, Lookbook, COD).
Tu dois :
1Ô∏è‚É£ Configurer la base Postgres et les environnements.
2Ô∏è‚É£ Activer le paiement √† la livraison (manual provider).
3Ô∏è‚É£ G√©n√©rer un jeu de donn√©es de test (collection + 4 produits).
4Ô∏è‚É£ Pr√©parer les commandes COD et le script de capture.
5Ô∏è‚É£ Documenter la proc√©dure dans un README clair.

1) Configuration des environnements
Cr√©e et remplis ces fichiers (si non pr√©sents) :
medusa-api/.env.example
NODE_ENV=development
PORT=9000
DATABASE_URL=postgresql://USER:PASSWORD@HOST:PORT/DBNAME
STORE_CORS=http://localhost:3000
ADMIN_CORS=http://localhost:7000
JWT_SECRET=menow_dev_secret
COOKIE_SECRET=menow_cookie_secret

menow-web/.env.local.example
NEXT_PUBLIC_MEDUSA_URL=http://localhost:9000
SITE_NAME=Menow
SITE_URL=http://localhost:3000

Ajoute la commande setup dans le README :
cp medusa-api/.env.example medusa-api/.env
cp menow-web/.env.local.example menow-web/.env.local

2) Activer le paiement COD (‚Äúmanual provider‚Äù)

Dans medusa-api/src/config/plugins.ts :

const plugins = [
  {
    resolve: `manual`,
    options: {
      name: "Paiement comptant √† la livraison (France)",
    },
  },
  // Stripe optionnel plus tard :
  // {
  //   resolve: `medusa-payment-stripe`,
  //   options: {
  //     api_key: process.env.STRIPE_API_KEY,
  //   },
  // },
];
export default plugins;

3) Script de seed initial (medusa-api/src/scripts/seed-menow.ts)

Cr√©e un script seed qui injecte :

1 collection ‚ÄúCapsule‚Äù

4 produits premium (cuir, denim, coton, lin)

1 r√©gion France (EUR, TVA 20 %)

Active le provider manual

import { Medusa } from "@medusajs/medusa-js"
import dotenv from "dotenv"
dotenv.config()

const medusa = new Medusa({ baseUrl: "http://localhost:9000", maxRetries: 3 })

async function seed() {
  try {
    console.log("üåø Seeding Menow data...")

    // 1Ô∏è‚É£ R√©gion France
    const region = await medusa.admin.regions.create({
      name: "France",
      currency_code: "eur",
      tax_rate: 20,
      countries: ["fr"],
      payment_providers: ["manual"],
      fulfillment_providers: [],
    })
    console.log("‚úÖ R√©gion FR cr√©√©e :", region.id)

    // 2Ô∏è‚É£ Collection
    const collection = await medusa.admin.collections.create({
      title: "Capsule Menow",
      handle: "capsule",
    })
    console.log("‚úÖ Collection :", collection.id)

    // 3Ô∏è‚É£ Produits
    const produits = [
      {
        title: "Veste en cuir noir premium",
        description: "Cuir v√©ritable marocain, doublure soie, finition main.",
        handle: "veste-cuir-noir",
        type: { value: "veste" },
        collection_id: collection.id,
        options: [{ title: "Taille" }],
        variants: [{ title: "Taille M", prices: [{ currency_code: "eur", amount: 39000 }] }],
        images: ["https://picsum.photos/id/1062/800/1000"],
      },
      {
        title: "Blouson denim brut",
        description: "Denim marocain tiss√© main, coupe structur√©e.",
        handle: "blouson-denim",
        type: { value: "blouson" },
        collection_id: collection.id,
        options: [{ title: "Taille" }],
        variants: [{ title: "Taille L", prices: [{ currency_code: "eur", amount: 21000 }] }],
        images: ["https://picsum.photos/id/1059/800/1000"],
      },
      {
        title: "Chemise lin naturel",
        description: "Tissu lin l√©ger, confection artisanale √† Casablanca.",
        handle: "chemise-lin",
        type: { value: "chemise" },
        collection_id: collection.id,
        options: [{ title: "Taille" }],
        variants: [{ title: "Taille M", prices: [{ currency_code: "eur", amount: 8900 }] }],
        images: ["https://picsum.photos/id/1003/800/1000"],
      },
      {
        title: "Pantalon coupe droite coton bio",
        description: "Coton bio fil√© √† Marrakech, confort et durabilit√©.",
        handle: "pantalon-coton-bio",
        type: { value: "pantalon" },
        collection_id: collection.id,
        options: [{ title: "Taille" }],
        variants: [{ title: "Taille 42", prices: [{ currency_code: "eur", amount: 15900 }] }],
        images: ["https://picsum.photos/id/1037/800/1000"],
      },
    ]

    for (const p of produits) {
      const created = await medusa.admin.products.create(p)
      console.log("‚úÖ Produit :", created.id, "-", created.title)
    }

    console.log("üå± Seed termin√© avec succ√®s ‚úÖ")
  } catch (err) {
    console.error("‚ùå Erreur seed :", err)
  }
}
seed()


Ajoute le script √† package.json :

"scripts": {
  "seed": "ts-node src/scripts/seed-menow.ts"
}

4) Capture d‚Äôune commande COD (exemple Admin)

Cr√©e un fichier medusa-api/docs/capture-cod.md :

### Exemple capture paiement √† la livraison (France)

1. R√©cup√©rer l‚Äô`id` du paiement :
GET /admin/orders/<id> ‚Üí "payments[0].id"

2. Capturer apr√®s encaissement :
POST /admin/payments/<PAYMENT_ID>/capture
Headers : Authorization: Bearer <ADMIN_TOKEN>

‚úÖ Le `payment_status` passe √† "captured"

5) Commandes NPM globales

Dans la racine du monorepo, ajoute :

# Installation
pnpm install

# Lancer API + Front
pnpm dev

# Seeder les produits
pnpm --filter medusa-api seed

6) D√©ploiement Replit (Always-On)
API (medusa-api)

Type : Always-On

Port : 9000

ENV : ceux de .env

CORS : http://localhost:3000, https://*.replit.dev

DB : Postgres Neon/Supabase (r√©gion EU)

Front (menow-web)

Type : Web app

Build : pnpm --filter menow-web build

Run : pnpm --filter menow-web start

ENV : NEXT_PUBLIC_MEDUSA_URL=https://<ton-api>.repl.co

7) README final √† g√©n√©rer

üìò √âtapes compl√®tes : setup ‚Üí seed ‚Üí test ‚Üí capture COD ‚Üí d√©ploiement.

üîí Notes RGPD : donn√©es clients h√©berg√©es en EU.

‚öôÔ∏è Maintenance : comment ajouter Stripe plus tard (medusa-payment-stripe).

üß± Structure du monorepo (API + Front).

8) V√©rifications √† ex√©cuter apr√®s g√©n√©ration

 /store/products retourne bien 4 produits.

 Front Next.js affiche la collection ‚ÄúCapsule‚Äù (4 produits).

 Badge ‚ÄúPaiement comptant disponible‚Äù visible sur PDP.

 Commande cr√©√©e ‚Üí payment_status = requires_action.

 Capture manuelle fonctionne (POST /admin/payments/:id/capture).

 Animations / couleurs / Hero conformes √† la version Shopify.

‚ö° G√©n√®re maintenant :
1Ô∏è‚É£ le fichier seed-menow.ts complet
2Ô∏è‚É£ les scripts npm (dev, seed)
3Ô∏è‚É£ la doc capture-cod.md
4Ô∏è‚É£ le README clair avec toutes les √©tapes ci-dessus

Rends tout pr√™t √† ex√©cuter sur Replit.